basePath: /api/v1
definitions:
  BaseResponse:
    properties:
      data: {}
    type: object
  CreateUserInput:
    properties:
      full_name:
        example: John Doe
        type: string
      role:
        example: RECEPTIONIST
        type: string
      user_name:
        example: "+919876543210"
        type: string
    type: object
  ForbiddenAccessError:
    properties:
      code:
        example: FORBIDDEN_ACCESS
        type: string
      message:
        example: You are forbidden from accessing this resource
        type: string
    type: object
  InitLoginInput:
    properties:
      username:
        example: "+919876543210"
        type: string
    type: object
  InvalidRequestError:
    properties:
      message:
        example: invalid request
        type: string
    type: object
  LoginInput:
    properties:
      otp:
        example: "123456"
        type: string
      username:
        example: "+919876543210"
        type: string
    type: object
  LoginOutput:
    properties:
      expires_in:
        type: integer
      token:
        type: string
    type: object
  SystemError:
    properties:
      code:
        example: INTERNAL_SERVER_ERROR
        type: string
      message:
        example: Oops! Something went wrong. Please try again later
        type: string
    type: object
  UnauthorizedError:
    properties:
      code:
        example: UNAUTHORIZED
        type: string
      message:
        example: You are not authorized to access this resource
        type: string
    type: object
  User:
    properties:
      created_at:
        type: string
      full_name:
        example: John Doe
        type: string
      id:
        example: ""
        type: string
      role:
        example: RECEPTIONIST
        type: string
      updated_at:
        type: string
      user_name:
        example: "+919876543210"
        type: string
    type: object
host: localhost:7700
info:
  contact:
    email: md.rizwank431@gmail.com
    name: Mohammad Developer
    url: https://rizwank123.github.io
  description: WeChat application's set of APIs
  termsOfService: https://example.com/terms
  title: WeChat API
  version: "1.0"
paths:
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided details
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/CreateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/InvalidRequestError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ForbiddenAccessError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/SystemError'
      summary: Register a new user
      tags:
      - Auth
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Find a user based on the provided ID
      operationId: findUserByID
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/InvalidRequestError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/ForbiddenAccessError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/SystemError'
      security:
      - JWT: []
      summary: Find a user by ID
      tags:
      - User
  /users/init/login:
    post:
      consumes:
      - application/json
      description: Initiates the login process, such as sending an OTP or a link for
        authentication
      operationId: initUserLogin
      parameters:
      - description: Login initiation input
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/InitLoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/BaseResponse'
            - properties:
                data: {}
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/InvalidRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/SystemError'
      summary: Initiate login
      tags:
      - Auth
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user using provided credentials
      operationId: userLogin
      parameters:
      - description: Login input
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/LoginOutput'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/InvalidRequestError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/SystemError'
      summary: User login
      tags:
      - Auth
schemes:
- http
- https
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
